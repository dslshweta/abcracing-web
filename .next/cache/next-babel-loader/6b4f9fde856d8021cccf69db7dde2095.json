{"ast":null,"code":"var _jsxFileName = \"/var/www/html/abcracing-web/views/Login/Login.jsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport Link from 'next/link';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport Input from '../../common/components/Input';\nimport Button from '../../common/components/Button';\nimport useForm from '../../common/hooks/form';\nimport { loginUser } from '../../redux/actions/login';\nimport { validateRequire } from '../../common/helpers/validators';\nimport styles from './styles';\nconst fieldNames = {\n  LOGIN_ID: 'loginId',\n  PASSWORD: 'password'\n};\n\nfunction handleSubmit(values) {\n  this.loginUser(values);\n}\n\nfunction handleChange(event, preValues) {\n  const {\n    name,\n    value\n  } = event.target || {};\n  return _objectSpread({}, preValues, {\n    [name]: value\n  });\n}\n\nconst fields = {\n  [fieldNames.LOGIN_ID]: {\n    handleChange\n  },\n  [fieldNames.PASSWORD]: {\n    handleChange\n  }\n};\n\nfunction validate({\n  values = {}\n}) {\n  const errors = {};\n\n  if (!validateRequire(values[fieldNames.LOGIN_ID])) {\n    errors[fieldNames.LOGIN_ID] = 'Please enter Login id';\n  }\n\n  if (!validateRequire(values[fieldNames.PASSWORD])) {\n    errors[fieldNames.PASSWORD] = 'Please enter password';\n  }\n\n  return errors;\n}\n\nfunction Login(props) {\n  const {\n    values,\n    errors,\n    events\n  } = useForm({\n    initialValues: {},\n    handleSubmit: handleSubmit.bind(props),\n    fields,\n    validate\n  });\n  const {\n    login\n  } = props;\n\n  const {\n    onSubmit\n  } = events,\n        restEvents = _objectWithoutProperties(events, [\"onSubmit\"]);\n\n  return __jsx(\"div\", {\n    style: styles.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    style: styles.sideImageContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }, __jsx(\"img\", {\n    src: \"/auth-img.jpg\",\n    alt: \"auth-img\",\n    height: \"100%\",\n    width: \"100%\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  })), __jsx(\"div\", {\n    style: styles.formContainer,\n    className: \"Box--Shadow\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    style: {\n      textAlign: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 11\n    }\n  }, __jsx(\"span\", {\n    style: {\n      fontSize: '1.5rem',\n      fontWeight: 'bold'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }\n  }, \"WELCOME TO ABC\")), __jsx(\"div\", {\n    style: styles.formFieldsContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 11\n    }\n  }, __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }\n  }, __jsx(Input, _extends({\n    name: \"loginId\",\n    labelText: \"Login Id\",\n    placeholder: \"Login Id\",\n    value: values[fieldNames.LOGIN_ID]\n  }, restEvents, {\n    errorText: errors[fieldNames.LOGIN_ID],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 15\n    }\n  }))), __jsx(\"div\", {\n    style: {\n      marginTop: 24\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }\n  }, __jsx(Input, _extends({\n    name: \"password\",\n    labelText: \"Password\",\n    placeholder: \"Password\",\n    type: \"password\",\n    value: values[fieldNames.PASSWORD]\n  }, restEvents, {\n    errorText: errors[fieldNames.PASSWORD],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 15\n    }\n  })))), __jsx(\"div\", {\n    style: styles.formActionsContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 11\n    }\n  }, __jsx(Link, {\n    href: \"/forgot-password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }\n  }, __jsx(\"span\", {\n    className: \"Primary\",\n    style: styles.forgotPasswordLink,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 15\n    }\n  }, \"Forgot Password?\")), __jsx(Button, {\n    type: \"primary\",\n    style: styles.loginAction,\n    disabled: login.isProcessing,\n    onClick: onSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }\n  }, \"Login\")))));\n}\n\nLogin.propTypes = {\n  login: PropTypes.shape({\n    isProcessing: PropTypes.bool.isRequired\n  }).isRequired\n};\n\nconst mapStateToProps = ({\n  login\n}) => ({\n  login\n});\n\nexport default connect(mapStateToProps, {\n  loginUser\n})(Login);","map":{"version":3,"sources":["/var/www/html/abcracing-web/views/Login/Login.jsx"],"names":["Link","connect","PropTypes","Input","Button","useForm","loginUser","validateRequire","styles","fieldNames","LOGIN_ID","PASSWORD","handleSubmit","values","handleChange","event","preValues","name","value","target","fields","validate","errors","Login","props","events","initialValues","bind","login","onSubmit","restEvents","root","sideImageContainer","formContainer","textAlign","fontSize","fontWeight","formFieldsContainer","marginTop","formActionsContainer","forgotPasswordLink","loginAction","isProcessing","propTypes","shape","bool","isRequired","mapStateToProps"],"mappings":"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","sourcesContent":["import Link from 'next/link';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport Input from '../../common/components/Input';\nimport Button from '../../common/components/Button';\nimport useForm from '../../common/hooks/form';\nimport { loginUser } from '../../redux/actions/login';\nimport { validateRequire } from '../../common/helpers/validators';\nimport styles from './styles';\n\nconst fieldNames = {\n  LOGIN_ID: 'loginId',\n  PASSWORD: 'password',\n};\n\nfunction handleSubmit(values) {\n  this.loginUser(values);\n}\n\nfunction handleChange(event, preValues) {\n  const { name, value } = event.target || {};\n  return { ...preValues, [name]: value };\n}\n\nconst fields = {\n  [fieldNames.LOGIN_ID]: {\n    handleChange,\n  },\n  [fieldNames.PASSWORD]: {\n    handleChange,\n  },\n};\n\nfunction validate({ values = {} }) {\n  const errors = {};\n  if (!validateRequire(values[fieldNames.LOGIN_ID])) {\n    errors[fieldNames.LOGIN_ID] = 'Please enter Login id';\n  }\n\n  if (!validateRequire(values[fieldNames.PASSWORD])) {\n    errors[fieldNames.PASSWORD] = 'Please enter password';\n  }\n\n  return errors;\n}\n\nfunction Login(props) {\n  const { values, errors, events } = useForm({\n    initialValues: {}, handleSubmit: handleSubmit.bind(props), fields, validate,\n  });\n  const { login } = props;\n  const { onSubmit, ...restEvents } = events;\n  return (\n    <div style={styles.root}>\n      <div style={styles.sideImageContainer}>\n        <img src=\"/auth-img.jpg\" alt=\"auth-img\" height=\"100%\" width=\"100%\" />\n      </div>\n      <div\n        style={styles.formContainer}\n        className=\"Box--Shadow\"\n      >\n        <div>\n          <div style={{ textAlign: 'center' }}>\n            <span style={{ fontSize: '1.5rem', fontWeight: 'bold' }}>WELCOME TO ABC</span>\n          </div>\n          <div style={styles.formFieldsContainer}>\n            <div>\n              <Input\n                name=\"loginId\"\n                labelText=\"Login Id\"\n                placeholder=\"Login Id\"\n                value={values[fieldNames.LOGIN_ID]}\n                {...restEvents}\n                errorText={errors[fieldNames.LOGIN_ID]}\n              />\n            </div>\n            <div style={{ marginTop: 24 }}>\n              <Input\n                name=\"password\"\n                labelText=\"Password\"\n                placeholder=\"Password\"\n                type=\"password\"\n                value={values[fieldNames.PASSWORD]}\n                {...restEvents}\n                errorText={errors[fieldNames.PASSWORD]}\n              />\n            </div>\n          </div>\n          <div\n            style={styles.formActionsContainer}\n          >\n            <Link href=\"/forgot-password\">\n              <span\n                className=\"Primary\"\n                style={styles.forgotPasswordLink}\n              >\n                Forgot Password?\n              </span>\n            </Link>\n            <Button\n              type=\"primary\"\n              style={styles.loginAction}\n              disabled={login.isProcessing}\n              onClick={onSubmit}\n            >\n              Login\n            </Button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nLogin.propTypes = {\n  login: PropTypes.shape({\n    isProcessing: PropTypes.bool.isRequired,\n  }).isRequired,\n};\n\nconst mapStateToProps = ({ login }) => ({ login });\n\nexport default connect(mapStateToProps, ({ loginUser }))(Login);\n"]},"metadata":{},"sourceType":"module"}