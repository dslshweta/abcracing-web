{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar _REDUCER_HANDLERS;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { OPEN_NOTIFICATION, CLOSE_NOTIFICATION } from '../actions/notification';\nvar initialState = {\n  isOpen: false,\n  info: {}\n};\nvar REDUCER_HANDLERS = (_REDUCER_HANDLERS = {}, _defineProperty(_REDUCER_HANDLERS, OPEN_NOTIFICATION, function (state, _ref) {\n  var payload = _ref.payload;\n  return {\n    isOpen: true,\n    info: payload\n  };\n}), _defineProperty(_REDUCER_HANDLERS, CLOSE_NOTIFICATION, function () {\n  return _objectSpread({}, initialState);\n}), _REDUCER_HANDLERS); // ------------------------------------\n// Reducer\n// ------------------------------------\n\nexport default function notifyReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  var handler = REDUCER_HANDLERS[action.type];\n  return handler ? handler(state, action) : state;\n}","map":{"version":3,"sources":["/var/www/html/abcracing-web/redux/reducers/notification.js"],"names":["OPEN_NOTIFICATION","CLOSE_NOTIFICATION","initialState","isOpen","info","REDUCER_HANDLERS","state","payload","notifyReducer","action","handler","type"],"mappings":";;;;;;;;AAAA,SAASA,iBAAT,EAA4BC,kBAA5B,QAAsD,yBAAtD;AAEA,IAAMC,YAAY,GAAG;AACnBC,EAAAA,MAAM,EAAE,KADW;AAEnBC,EAAAA,IAAI,EAAE;AAFa,CAArB;AAKA,IAAMC,gBAAgB,+DACnBL,iBADmB,EACC,UAACM,KAAD;AAAA,MAAUC,OAAV,QAAUA,OAAV;AAAA,SACnB;AACEJ,IAAAA,MAAM,EAAE,IADV;AAEEC,IAAAA,IAAI,EAAEG;AAFR,GADmB;AAAA,CADD,sCAOnBN,kBAPmB,EAOE;AAAA,2BAEfC,YAFe;AAAA,CAPF,qBAAtB,C,CAcA;AACA;AACA;;AACA,eAAe,SAASM,aAAT,GAAqD;AAAA,MAA9BF,KAA8B,uEAAtBJ,YAAsB;AAAA,MAARO,MAAQ;AAClE,MAAMC,OAAO,GAAGL,gBAAgB,CAACI,MAAM,CAACE,IAAR,CAAhC;AACA,SAAOD,OAAO,GAAGA,OAAO,CAACJ,KAAD,EAAQG,MAAR,CAAV,GAA4BH,KAA1C;AACD","sourcesContent":["import { OPEN_NOTIFICATION, CLOSE_NOTIFICATION } from '../actions/notification';\n\nconst initialState = {\n  isOpen: false,\n  info: {},\n};\n\nconst REDUCER_HANDLERS = {\n  [OPEN_NOTIFICATION]: (state, { payload }) => (\n    {\n      isOpen: true,\n      info: payload,\n    }\n  ),\n  [CLOSE_NOTIFICATION]: () => (\n    {\n      ...initialState,\n    }\n  ),\n};\n\n// ------------------------------------\n// Reducer\n// ------------------------------------\nexport default function notifyReducer(state = initialState, action) {\n  const handler = REDUCER_HANDLERS[action.type];\n  return handler ? handler(state, action) : state;\n}\n"]},"metadata":{},"sourceType":"module"}