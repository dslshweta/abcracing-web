{"ast":null,"code":"import \"antd/lib/input/style\";\nimport _Input from \"antd/lib/input\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport './input.less';\n\nfunction Input(_ref) {\n  let {\n    labelText,\n    errorText\n  } = _ref,\n      restProps = _objectWithoutProperties(_ref, [\"labelText\", \"errorText\"]);\n\n  return __jsx(\"div\", {\n    className: \"Input\"\n  }, labelText && __jsx(\"span\", {\n    className: `Input__Label ${errorText && 'Error'}`\n  }, labelText), __jsx(_Input, _extends({\n    className: `Box--Shadow ${errorText && 'Error--Border'}`\n  }, restProps)), errorText && __jsx(\"span\", {\n    className: \"Input__Error\"\n  }, errorText));\n}\n\nInput.defaultProps = {\n  labelText: '',\n  errorText: '',\n  maxLength: 30\n};\nexport default Input;","map":null,"metadata":{},"sourceType":"module"}