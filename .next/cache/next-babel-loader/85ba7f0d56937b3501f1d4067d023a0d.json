{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar _REDUCER_HANDLERS;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n// ------------------------------------\n// Imports\n// ------------------------------------\nimport { FETCH_USER_START, ERROR_USER, FETCH_USER_END, LOGOUT_USER } from '../actions/user'; // ------------------------------------\n// Reducer Handlers\n// ------------------------------------\n\nexport var initialState = {\n  isFetching: false,\n  isError: false,\n  info: null\n};\nvar REDUCER_HANDLERS = (_REDUCER_HANDLERS = {}, _defineProperty(_REDUCER_HANDLERS, FETCH_USER_START, function () {\n  return _objectSpread({}, initialState, {\n    isFetching: true\n  });\n}), _defineProperty(_REDUCER_HANDLERS, ERROR_USER, function () {\n  return _objectSpread({}, initialState, {\n    isError: true\n  });\n}), _defineProperty(_REDUCER_HANDLERS, FETCH_USER_END, function (state, action) {\n  return _objectSpread({}, initialState, {\n    info: action.payload\n  });\n}), _REDUCER_HANDLERS);\nexport function clearReduxOnLogout(state, action) {\n  var appState = state;\n\n  if (action.type === LOGOUT_USER) {\n    appState = undefined;\n  }\n\n  return appState;\n} // ------------------------------------\n// Reducer\n// ------------------------------------\n\nexport default function authReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  var handler = REDUCER_HANDLERS[action.type];\n  return handler ? handler(state, action) : state;\n}","map":{"version":3,"sources":["/var/www/html/abcracing-web/redux/reducers/user.js"],"names":["FETCH_USER_START","ERROR_USER","FETCH_USER_END","LOGOUT_USER","initialState","isFetching","isError","info","REDUCER_HANDLERS","state","action","payload","clearReduxOnLogout","appState","type","undefined","authReducer","handler"],"mappings":";;;;;;;;AAAA;AACA;AACA;AACA,SACEA,gBADF,EACoBC,UADpB,EAEEC,cAFF,EAEkBC,WAFlB,QAGO,iBAHP,C,CAKA;AACA;AACA;;AACA,OAAO,IAAMC,YAAY,GAAG;AAC1BC,EAAAA,UAAU,EAAE,KADc;AAE1BC,EAAAA,OAAO,EAAE,KAFiB;AAG1BC,EAAAA,IAAI,EAAE;AAHoB,CAArB;AAMP,IAAMC,gBAAgB,+DACnBR,gBADmB,EACA;AAAA,2BAAYI,YAAZ;AAA0BC,IAAAA,UAAU,EAAE;AAAtC;AAAA,CADA,sCAEnBJ,UAFmB,EAEN;AAAA,2BAAYG,YAAZ;AAA0BE,IAAAA,OAAO,EAAE;AAAnC;AAAA,CAFM,sCAGnBJ,cAHmB,EAGF,UAACO,KAAD,EAAQC,MAAR;AAAA,2BAAyBN,YAAzB;AAAuCG,IAAAA,IAAI,EAAEG,MAAM,CAACC;AAApD;AAAA,CAHE,qBAAtB;AAMA,OAAO,SAASC,kBAAT,CAA4BH,KAA5B,EAAmCC,MAAnC,EAA2C;AAChD,MAAIG,QAAQ,GAAGJ,KAAf;;AACA,MAAIC,MAAM,CAACI,IAAP,KAAgBX,WAApB,EAAiC;AAC/BU,IAAAA,QAAQ,GAAGE,SAAX;AACD;;AACD,SAAOF,QAAP;AACD,C,CAED;AACA;AACA;;AACA,eAAe,SAASG,WAAT,GAAmD;AAAA,MAA9BP,KAA8B,uEAAtBL,YAAsB;AAAA,MAARM,MAAQ;AAChE,MAAMO,OAAO,GAAGT,gBAAgB,CAACE,MAAM,CAACI,IAAR,CAAhC;AACA,SAAOG,OAAO,GAAGA,OAAO,CAACR,KAAD,EAAQC,MAAR,CAAV,GAA4BD,KAA1C;AACD","sourcesContent":["// ------------------------------------\n// Imports\n// ------------------------------------\nimport {\n  FETCH_USER_START, ERROR_USER,\n  FETCH_USER_END, LOGOUT_USER,\n} from '../actions/user';\n\n// ------------------------------------\n// Reducer Handlers\n// ------------------------------------\nexport const initialState = {\n  isFetching: false,\n  isError: false,\n  info: null,\n};\n\nconst REDUCER_HANDLERS = {\n  [FETCH_USER_START]: () => ({ ...initialState, isFetching: true }),\n  [ERROR_USER]: () => ({ ...initialState, isError: true }),\n  [FETCH_USER_END]: (state, action) => ({ ...initialState, info: action.payload }),\n};\n\nexport function clearReduxOnLogout(state, action) {\n  let appState = state;\n  if (action.type === LOGOUT_USER) {\n    appState = undefined;\n  }\n  return appState;\n}\n\n// ------------------------------------\n// Reducer\n// ------------------------------------\nexport default function authReducer(state = initialState, action) {\n  const handler = REDUCER_HANDLERS[action.type];\n  return handler ? handler(state, action) : state;\n}\n"]},"metadata":{},"sourceType":"module"}